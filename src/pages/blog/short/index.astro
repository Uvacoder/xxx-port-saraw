---
import BaseHead from "../../../components/BaseHead.astro";
import Header from "../../../components/Header.astro";
import Toggle from "../../../components/Toggle.astro";

const shorts = (await Astro.glob('./*.{md,mdx}')).sort(
	(a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
);
---

<html lang="en">
	<head>
		<BaseHead title="Short Thoughts" description="Posts too small to be called articles" image="/images/placeholder.png" />
	</head>

	<body>
		<Header />
		<main>
			<div class="tab sara"><h2><a href="/#gosara">sara</a></h2></div>
			<div class="tab work"><h2><a href="/#gowork">work</a></h2></div>
			<div class="tab blog"><h2><a href="/#goblog">blog</a></h2></div>
			<div class="post">
				<article>

						{shorts.map((short) => (
							<article>
								<h3><a href={short.url}>{short.frontmatter.title}</a></h3>
								<time datetime={short.frontmatter.pubDate}>
									{new Date(short.frontmatter.pubDate).toLocaleDateString('en-gb', {
										year: 'numeric',
										month: 'short',
										day: 'numeric',
									})}
								</time>
								<div set:html={short.compiledContent()}></div>
							</article>
						))}
					<a class="back" href="/#goblog">&larr; back to blog index</a>
				</article>
			</div>
		</main>
		<Toggle />
	</body>
</html>

<style>
	main {
		background-color: var(--header);
		margin-top: var(--tabheight);
	}
	.tab {
		position: fixed !important;
		top: 0.5rem;
		pointer-events: none;
		margin-top: 0 !important;
		width: calc(100% - 0.5rem);
	}
	.tab::after {
	}
	article {
		max-width: 80ch;
		margin: 0 auto;
		padding: 5.5vmin;
	}
	figure {
		margin-inline: auto;
		margin-block: 0 3vmin;
	}
	h1 {
		margin-bottom: 0;
	}
	time {
		display: block;
		width: fit-content;
		margin: 0 0 3rem auto;
	}
	.post {
		background-color: var(--blog);
		margin: 0 0.25rem;
	}
  .post :global(img) {
		display: block;
		margin: 0 auto;
		max-width: 100%;
		max-height: 25rem;
		border-radius: var(--border-radii);
    box-shadow: 1px 1px 15px -12px black;
  }
	.post :global(p>img) {
		margin-top: 0.5rem;
	}
	.post :global(.caption) {
		text-align: center;
		font-size: var(--sml);
		font-style: italic;
	}
  .post :global(li) {
    font-size: var(--p);
    line-height: var(--h3);
  }
  .post :global(h2) {
    color: var(--links);
  }
  .post :global(h3), .post :global(h4), h1 {
    color: var(--hover);
  }
  .post :global(pre, .tweet) {
		padding: 3vmin;
    border-radius: var(--border-radii);
    box-shadow: 1px 1px 15px -12px black;
	}
  .post :global(pre) {
		font-size: var(--sml);
		line-height: 1.25em;
    background-color: var(--sara) !important;
    white-space: pre-wrap;
    max-width: 100%;
    overflow-x: auto;
  }
  .post :global(.tweet) {
    background-color: var(--work);
		margin: 5vmin 0;
  }
  .post :global(.tweet > *:first-child) {margin-top: 0}
  .post :global(.tweet > *:last-child) {margin-bottom: 0}
  .post :global(table) {
    margin-block: 1rem;
    font-size: var(--sml);
  }
  .post :global(:is(td, th)) {
    padding: 0.5ch 1ch;
  }
  .post :global(thead) {
    border: 2px solid black;
  }

	:root {
    --pink: mediumvioletred;
    --green: teal;
    --blue: slateblue;
    --yellow: darkgoldenrod;
    --orange: orangered;
  }

	:root.dark-mode {
		--pink: hotpink;
		--green: springgreen;
		--blue: cyan;
		--yellow: gold;
		--orange: lightsalmon;
	}

  .post :global(code .comment) {
    color: var(--orange);
  }
  .post :global(code .tag),
  .post :global(code .keyword),
  .post :global(code .selector),
  .post :global(code .operator) {
    color: var(--blue);
  }
  .post :global(code .punctuation),
  .post :global(code .parameter) {
    color: var(--pink);
  }
  .post :global(code .attr-name),
  .post :global(code .function) {
    color: var(--yellow);
  }
  .post :global(code .attr-value),
  .post :global(code .property),
  .post :global(code .string) {
    color: var(--green);
  }

	a.back {
		display: block;
		width: fit-content;
		margin: 3em auto 0;
		font-weight: bold;
	}
</style>