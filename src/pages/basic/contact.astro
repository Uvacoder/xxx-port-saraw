---
let lastMonth = new Date();
lastMonth.setMonth(lastMonth.getMonth() - 1);

async function getAllEntries() {
  const response = await fetch(new Request(`https://api.netlify.com/api/v1/sites/${import.meta.env.WEBSITE_ID}/submissions`, {method: 'GET', headers: {'Authorization': `Bearer ${import.meta.env.NETLIFY_ACCESS}`}, 'Accept':'application/json'}));
  return response.json();
}
const allSubs = await getAllEntries();
const subsLastMonth = allSubs.filter((sub) => (new Date(sub.created_at) > new Date(lastMonth)));
const tooManySubs = subsLastMonth.length >= 95;

async function getGuestEntries() {
  const response = await fetch(new Request(`https://api.netlify.com/api/v1/forms/${import.meta.env.GUESTBOOK_ID}/submissions`, {method: 'GET', headers: {'Authorization': `Bearer ${import.meta.env.NETLIFY_ACCESS}`}, 'Accept':'application/json'}));
  return response.json();
}
const entries = await getGuestEntries();

// import PrivacyPolicy from '../../components/PrivacyPolicy.astro';
import Basic from '../../layouts/Basic.astro';
---

<Basic title="Contact" page="contact">
<h2>Email me</h2>
<form name="contact" method="POST" data-netlify="true" Content-Type="application/x-www-form-urlencoded">
  <input type="hidden" name="form-name" value="contact" />
  <p>
    <label
      >Name:
      <br /><input type="text" name="name" required /></label
    >
  </p>
  <p>
    <label
      >Email address:
      <br /><input type="email" name="email" required /></label
    >
  </p>
  <p>
    <label class="message">Message:<br /><textarea name="message" required /></label>
  </p>
  <p>
    <button type="submit"><b>Send</b></button>
  </p>
</form>

<h2>Guestbook</h2>
{!tooManySubs && 
  <form name="guestbook" method="POST" data-netlify="true" Content-Type="application/x-www-form-urlencoded">
    <input type="hidden" name="form-name" value="guestbook" />
    <p>
      <label
        >Name
        <br /><input type="text" name="name" required /></label
      >
    </p>
    <p>
      <label
        >Email <small>(optional, not published)</small>
        <br /><input type="email" name="email" placeholder="place@holder.com" /></label
      >
    </p>
    <p>
      <label
        >URL <small>(optional, linked from Name)</small>
        <br /><input type="url" name="url" placeholder="https://example.com" pattern="https://.*" /></label
      >
    </p>
    <p>
      <label class="message">Message<br /><textarea name="message" required /></label>
    </p>
    <p>
      <button type="submit"><b>Send</b></button>
    </p>
  </form>}
  
  {tooManySubs &&
    <p><em>Can't see a form? That's because I've had too many submissions this month - please check back another day, or find me via my <a href="/#find">socials</a>.</em></p>
  }
  {entries.map((entry) =>(
    <article class="entry">
      <h2>{entry.human_fields.Url && <a href={entry.human_fields.Url}>{entry.name}</a>}{!entry.human_fields.Url && entry.name}</h2>
      <p>{entry.body}</p>
      <time>{new Date(entry.created_at).toLocaleDateString('en-gb', {
        year: 'numeric',
        month: 'short',
        day: 'numeric',
      })}</time>
    </article>
  ))}
</Basic>